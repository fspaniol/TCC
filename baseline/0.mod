set RP, default {0..30};
set LP, within RP cross RP;
set NF, default {0..2};
set MAXNF, default {0..30};
set N, default {0..1};
set RV, default {0..3};
set GRV, within N cross RV;
set GLV, within N cross RV cross RV;
set GNF, within NF cross MAXNF;
set S, default {0..30};
set SP, within RP cross S;
set SV, within GRV cross S;
param CP{i in RP}, integer, > 0;
param DP{(i,j) in LP}, >= 0;
param MP{i in RP}, integer, > 0;
param BP{(i,j) in LP}, integer, > 0;
param CV{(n,i) in GRV}, integer, >= 0;
param MV{(n,i) in GRV}, integer, >= 0;
param BV{(n,i,j) in GLV}, integer, >= 0;
param DR{i in N}, >= 0;
param NFCPU{(i, j) in GNF}, integer, > 0;
param NFMEM{(i, j) in GNF}, integer, > 0;
param NFI{(n,i) in GRV}, integer, >= 0;
var AN{i in RP, (n,j) in GRV}, binary;
var AL{(i,j) in LP, (k,m,n) in GLV}, binary;
var y{i in RP, (m,j) in GNF}, binary;
var wAux{i in RP, m in NF}, integer, >=0;
s.t. r1{i in RP}: sum{(j,m) in GNF} y[i,j,m] * NFCPU[j,m] <= CP[i];
s.t. r2{i in RP, m in NF}: wAux[i,m] = sum{k in MAXNF : (m,k) in GNF} y[i,m,k] * NFCPU[m,k];
s.t. r3{m in NF, i in RP}: sum{(n,j) in GRV : m == NFI[n,j]} CV[n,j] * AN[i,n,j] <= wAux[i,m];
s.t. r4{i in RP, (n,m) in GRV : NFI[n,m] > 0}: AN[i,n,m] <= sum{(k,j) in GNF : k == NFI[n,m]} y[i,k, j];
s.t. r5{(i,j) in LP}: sum{(k,m,n) in GLV} BV[k,m,n] * AL[i,j,k,m,n] <= BP[i,j];
s.t. r6{(n,j) in GRV}: sum{i in RP} AN[i,n,j] = 1;
s.t. r7{(k,m,n) in GLV, i in RP}: sum{j in RP: (i,j) in LP} AL[i,j,k,m,n] - sum{j in RP: (i,j) in LP} AL[j,i,k,m,n] = AN[i,k,m] - AN[i,k,n];
s.t. r10Location{(i,j) in SP, (n,k,l) in SV}: AN[i,n,k] * j = AN[i,n,k] * l;
s.t. rBaseline: sum{i in RP, (k,m) in GNF} y[i,k,m] <= 2;
minimize MinResources: sum{(i,j) in LP, (n,k,l) in GLV} AL[i,j,n,k,l] * BV[n,k,l];
solve;
